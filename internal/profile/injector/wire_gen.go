// Code generated by Wire. DO NOT EDIT.

//go:generate go run github.com/google/wire/cmd/wire
//go:build !wireinject
// +build !wireinject

package profile

import (
	"gorm.io/gorm"
	"online-course/internal/admin/repository"
	admin2 "online-course/internal/admin/usecase"
	"online-course/internal/oauth/repository"
	oauth2 "online-course/internal/oauth/usecase"
	"online-course/internal/profile/delivery/http"
	profile2 "online-course/internal/profile/usecase"
	"online-course/internal/user/repository"
	user2 "online-course/internal/user/usecase"
)

// Injectors from wire.go:

func InitializedService(db *gorm.DB) *profile.ProfileHandler {
	userRepository := user.NewUserRepository(db)
	userUsecase := user2.NewUserUseCase(userRepository)
	oauthClientRepository := oauth.NewOauthClientRepository(db)
	oauthAccessTokenRepository := oauth.NewOauthAccessTokenRepository(db)
	oauthRefreshTokenRepository := oauth.NewOauthRefreshTokenRepository(db)
	adminRepository := admin.NewAdminRepository(db)
	adminUsecase := admin2.NewAdminUsecase(adminRepository)
	oauthUsecase := oauth2.NewOauthUsecase(oauthClientRepository, oauthAccessTokenRepository, oauthRefreshTokenRepository, userUsecase, adminUsecase)
	profileUsecase := profile2.NewProfileUsecase(userUsecase, oauthUsecase)
	profileHandler := profile.NewProfileHandler(profileUsecase)
	return profileHandler
}
